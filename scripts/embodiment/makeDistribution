#!/usr/bin/tclsh

# Usage:
# makeDistribution.tcl [<bin dir> [<tag name>] [<type of distribution = "dev" or "user">]]
# <bin dir> is the directory where the script will try to find the compiled executables, 
#           relative to petaverse base dir. Default is "bin", Ie, it will try to find binaries
#           under {petaverse base dir}/bin
# 
# <tag name> is a tag it will use to name the distribution. Default is <svn revision number>.
# <type of distribution> select the type of config file will be copy. .
# 
# This script will copy all the relevant files into {petaverse base dir}/dist/<tag name>

set binDir "bin" 
set tag ""

# typedist = dev | user
set type_dist "dev"

if {[llength $argv] > 0} {
    set binDir [lindex $argv 0] 
    if {[llength $argv] > 1} {
        set tag [lindex $argv 1]
    }
    if {[llength $argv] > 2} {
        set type_dist [lindex $argv 2]
    }
} 

set flist [list  \
../$binDir/src/Control/MessagingSystem/router \
../$binDir/src/Control/MessagingSystem/spawner \
../$binDir/src/Control/OperationalPetController/opc \
../$binDir/src/Control/Procedure/combo_shell \
../$binDir/src/Control/Procedure/combo_shell_stdio \
../$binDir/src/Learning/LearningServer/learningServer \
../$binDir/src/RuleValidation/Processor/ruleProcessor \
../$binDir/src/PetaverseProxySimulator/pvpSimulator \
../$binDir/src/AGISimSim/server/AGISimSimServer \
../src/AGISimSim/server/simconfig.def \
./killpb.csh \
./cleanup.csh \
./pb.csh \
./pvpInterface.csh \
./stdlib.combo \
./rules_preconditions.combo \
./rules_preconditions.combo-select \
./rules_action_schemata.combo \
../src/rules_core.lua \
../src/humanoid_rules.lua \
../src/humanoid_traits_maria.lua \
../src/pet_rules.lua \
../src/pet_traits_bob.lua \
../src/pet_traits_diablo.lua \
../src/pet_traits_maxie.lua \
../src/pet_traits_princess.lua \
../src/pet_traits_sleepy.lua \
../src/RuleValidation/VirtualWorldData/VirtualWorld.xsd \
../src/RuleValidation/Processor/validation_core.lua \
../src/PetaverseProxySimulator/pvpsim.cfg \
../src/PetaverseProxySimulator/PVPSimulatorInterface.tcl \
../src/Control/OperationalPetController/PetInterface.tcl \
./SPCTools.py \
]

set flistAGI [list \
../src/AGISimSim/server/data/simworld.def \
../src/AGISimSim/server/data/sl_script_case01.def \
../src/AGISimSim/server/data/sl_script.def \
]

if {$type_dist == "dev"} {
    set flistconfig [list \
    ../src/dev_config/config.cfg \
    ../test/AutomatedSystemTest/test.cfg \
    ../$binDir/test/AutomatedSystemTest/pbTester \
    ../test/AutomatedSystemTest/GoldenStandardFiles/gsfile_0.txt \
    ../test/AutomatedSystemTest/GoldenStandardFiles/gsfile_1.txt \
    ../test/AutomatedSystemTest/GoldenStandardFiles/gsfile_2.txt \
    run_system_test.sh \
    ]
} elseif {$type_dist == "user"} {
    set flistconfig [list \
    ../src/config.cfg \
    ]
}

if {$tag == ""} {
    set tag [lindex [split [exec svn update] " ."] end-1]
}
set distDir [format "../dist/%s" $tag]
puts "Putting distribution files into $distDir"

exec mkdir -p $distDir
exec mkdir -p $distDir/data

foreach file $flist {
    exec cp -r $file $distDir
}

foreach file $flistAGI {
    exec cp -r $file $distDir/data
}

foreach file $flistconfig {
    exec cp -r $file $distDir
}
